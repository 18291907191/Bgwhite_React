{"version":3,"file":"static/webpack/10.d10d447a8125ea0ab5c1.hot-update.js","sources":["webpack:///./components/commons/header/menu.js"],"sourcesContent":["import { connect } from 'react-redux';\nimport axios from 'axios';\nimport Link from 'next/link'\n\nclass Menu extends PureComponent {\n  render() {\n    return (\n      <nav>\n        {\n          props.navList.map((item,index) => (\n            <Link key={+new Date() + index} href={item.url}>\n              <a \n                className={props.focused==index?'focused':''}\n                onClick={props.handleNav(index)}\n              >\n                {item.name}\n              </a>\n            </Link>\n          ))\n        }\n        <style jsx>{`\n          a {\n            color: #333333;\n            text-shadow: 0px 0px 2px #ffffff;\n            padding: 10px 10px;\n            position: relative;\n          }\n          a::before {\n            content: \"\";\n            position: absolute;\n            top: 0;\n            left: 100%;\n            width: 0;\n            height: 100%;\n            border-bottom: 2px solid #45BCF9;\n            transition: .2s all linear;\n          }\n          a:hover {\n            color: #ffffff;\n            text-shadow: 0px 0px 2px #45BCF9;\n          }\n          a:hover::before {\n            width: 100%;\n            left: 0;\n          }\n          a:hover ~ a::before {\n            left: 0;\n          }\n          .focused {\n            text-shadow: 0px 0px 2px #45BCF9;\n            border-bottom: 2px solid #45BCF9;\n            color: #ffffff;\n          }\n        `}</style>\n      </nav>\n    )\n  }\n  \n}\n\nconst mapStateToProps = (state) => {\n  return {\n    navList: state.header.get('navList'),\n    goodSentences: state.header.get('goodSentences'),\n    focused: state.header.get('focused')\n  }\n}\n\nconst mapDispathToProps = (dispatch) => {\n  return {\n    initNavList() {\n      axios.get('http://localhost:3002/nav_list')\n      .then(res => {\n        const data = res.data.result;\n        dispatch(actionCreators.initNavListAction(data));\n      })\n    },\n    handleNav(index) {\n      dispatch(actionCreators.selectNavItemAction(index));\n    }\n  }\n}\n\nexport default connect(mapStateToProps,mapDispathToProps)(Menu);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAFA;AAAA;AAAA;AAiDA;;;;AApDA;AACA;AAuDA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;;;;A","sourceRoot":""}